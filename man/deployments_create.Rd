% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deployments.R
\name{deployments_create}
\alias{deployments_create}
\title{Create deployments}
\usage{
deployments_create(data, preload_content = TRUE, ...)
}
\arguments{
\item{data}{named list of: [ name, description (optional), input_type, output_type, input_fields (optional), output_fields (optional), labels (optional) ]}

\item{preload_content}{(optional) Whether the API response should be preloaded. When TRUE the JSON response string is parsed to an R object. When FALSE, unprocessed API response object is returned. - Default = TRUE}

\item{...}{UBIOPS_PROJECT (system environment variable) UbiOps project name
UBIOPS_API_TOKEN (system environment variable) Token to connect to UbiOps API
UBIOPS_API_URL (optional - system environment variable) UbiOps API url - Default = "https://api.ubiops.com/v2.1"
UBIOPS_TIMEOUT (optional - system environment variable) Maximum request timeout to connect to UbiOps API - Default = NA
UBIOPS_DEFAULT_HEADERS (optional - system environment variable) Default headers to pass to UbiOps API, formatted like "header1:value1,header2:value2" - Default = ""}
}
\value{
Response from the API
 Details of the created deployment
  - `id`: Unique identifier for the deployment (UUID)
  - `name`: Name of the deployment
  - `project`: Project name in which the deployment is created
  - `input_type`: Type of the input of the deployment
  - `output_type`: Type of the output of the deployment
  - `input_fields`: The list of deployment input fields containing name and data_type
  - `output_fields`: The list of deployment output fields containing name and data_type
  - `description`: Description of the deployment
  - `labels`: Dictionary containing key/value pairs where key indicates the label and value is the corresponding value of that label
  - `creation_date`: The date when the deployment was created
  - `last_updated`: The date when the deployment was last updated
}
\description{
Create a deployment by defining the input/output type and input/output fields. In case of **plain** type of input or output, input and output fields should not be given or passed as an empty list.  Possible data types for the input and output fields are: - **int**: integer - **string**: string - **double**: double precision floating point - **bool**: boolean value (True/False) - **dict**: Python dictionary - **file**: a file. This type of field can be used to pass files to the deployment. In deployment and pipeline requests, the path to the file in the bucket must be provided for this field. - **array_int**: an array of integers - **array_double**: an array of double precision floating points - **array_string**: an array of strings - **array_file**: an array of files  Possible widgets for the input fields are: - **textbox**: textbox - **numberbox**: numberbox - **slider**: slider - **dropdown**: dropdown - **switch**: switch - **button**: upload button - **drawer**: drawer - **image_preview**: image upload with preview  Possible widgets for the output fields are: - **textbox**: textbox - **button**: download button - **image_preview**: image preview
}
\examples{
\dontrun{
data <- list(
 name = "name",
 description = "description",  # (optional)
 input_type = "input_type",
 output_type = "output_type",
 input_fields = list(  # (optional)
   list(
     name = "name",
     data_type = "data_type",
     widget = widget  # (optional)
   )
 ),
 output_fields = list(  # (optional)
   list(
     name = "name",
     data_type = "data_type",
     widget = widget  # (optional)
   )
 ),
 labels = list(key = "value")  # (optional)
)

# Use environment variables
Sys.setenv("UBIOPS_PROJECT" = "YOUR PROJECT NAME")
Sys.setenv("UBIOPS_API_TOKEN" = "YOUR API TOKEN")
result <- ubiops::deployments_create(
   data
)

# Or provide directly
result <- ubiops::deployments_create(
   data,
   UBIOPS_PROJECT = "YOUR PROJECT NAME", UBIOPS_API_TOKEN = "YOUR API TOKEN"
)

print(result)

# The default API url is https://api.ubiops.com/v2.1
# Want to use a different API url?
# Provide `UBIOPS_API_URL`, either directly or as environment variable.
}
}
