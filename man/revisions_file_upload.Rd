% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deployments.R
\name{revisions_file_upload}
\alias{revisions_file_upload}
\title{Upload deployment file}
\usage{
revisions_file_upload(deployment.name, version, file = NULL,
  source.deployment = NULL, source.version = NULL,
  preload_content = TRUE, ...)
}
\arguments{
\item{deployment.name}{character}

\item{version}{character}

\item{file}{(optional) file path - Example: file.path("path", "to", "file")}

\item{source.deployment}{(optional) character}

\item{source.version}{(optional) character}

\item{preload_content}{(optional) Whether the API response should be preloaded. When TRUE the JSON response string is parsed to an R object. When FALSE, unprocessed API response object is returned. - Default = TRUE}

\item{...}{UBIOPS_PROJECT (system environment variable) UbiOps project name
UBIOPS_API_TOKEN (system environment variable) Token to connect to UbiOps API
UBIOPS_API_URL (optional - system environment variable) UbiOps API url - Default = "https://api.ubiops.com/v2.1"
UBIOPS_TIMEOUT (optional - system environment variable) Maximum request timeout to connect to UbiOps API - Default = NA
UBIOPS_DEFAULT_HEADERS (optional - system environment variable) Default headers to pass to UbiOps API, formatted like "header1:value1,header2:value2" - Default = ""}
}
\value{
Response from the API
 - `success`: Boolean indicating whether the deployment file upload/copy succeeded or not
  - `revision`: UUID of the created revision for the file upload
  - `build`: UUID of the build created for the file upload
}
\description{
Upload a deployment file for a version. Uploading a deployment file will create a new revision and trigger a build. This file should contain the deployment that will be run. It should be provided as a zip and a template can be found on https://github.com/UbiOps/deployment-template. The file is saved under a directory in the storage specified in the settings.   It is **also possible** to provide a source version from which the deployment file will be copied. This will also create a new revision and trigger a build.
}
\examples{
\dontrun{
# Use environment variables
Sys.setenv("UBIOPS_PROJECT" = "YOUR PROJECT NAME")
Sys.setenv("UBIOPS_API_TOKEN" = "YOUR API TOKEN")
result <- ubiops::revisions_file_upload(
   deployment.name, version,
   file = NULL, source.deployment = NULL, source.version = NULL
)

# Or provide directly
result <- ubiops::revisions_file_upload(
   deployment.name, version,
   file = NULL, source.deployment = NULL, source.version = NULL, 
   UBIOPS_PROJECT = "YOUR PROJECT NAME", UBIOPS_API_TOKEN = "YOUR API TOKEN"
)

print(result)

# The default API url is https://api.ubiops.com/v2.1
# Want to use a different API url?
# Provide `UBIOPS_API_URL`, either directly or as environment variable.
}
}
