% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{time_series_data_list}
\alias{time_series_data_list}
\title{List time series data}
\usage{
time_series_data_list(
  metric = NULL,
  start.date = NULL,
  end.date = NULL,
  aggregation.period = NULL,
  labels = NULL,
  preload_content = TRUE,
  ...
)
}
\arguments{
\item{metric}{(optional) character}

\item{start.date}{(optional) character}

\item{end.date}{(optional) character}

\item{aggregation.period}{(optional) integer}

\item{labels}{(optional) character - Example: "label1:value1,label2:value2"}

\item{preload_content}{(optional) Whether the API response should be preloaded. When TRUE the JSON response string is parsed to an R object. When FALSE, unprocessed API response object is returned. - Default = TRUE}

\item{...}{UBIOPS_PROJECT (system environment variable) UbiOps project name
UBIOPS_API_TOKEN (system environment variable) Token to connect to UbiOps API
UBIOPS_API_URL (optional - system environment variable) UbiOps API url - Default = "https://api.ubiops.com/v2.1"
UBIOPS_TIMEOUT (optional - system environment variable) Maximum request timeout to connect to UbiOps API - Default = NA
UBIOPS_DEFAULT_HEADERS (optional - system environment variable) Default headers to pass to UbiOps API, formatted like "header1:value1,header2:value2" - Default = ""}
}
\value{
Response from the API
 - `metric`: Name of the metric
  - `metric_type`: Type of the metric
  - `unit`: Unit of the metric
  - `start_date`: Start date for metric data points
  - `end_date`: End date for metric data points
  - `aggregation_period`: Time period in seconds in which data points are grouped
  - `labels`: Labels to filter on data points
  - `data`: A list of dictionaries containing the data points
}
\description{
List data points for a metric  Available metrics for deployments: - `deployments.requests`: Number of requests to a deployment version - `deployments.failed_requests`: Number of failed requests to a deployment version - `deployments.request_duration`: Average time in seconds for a deployment request to complete - `deployments.input_volume`: Volume of incoming data in bytes - `deployments.output_volume`: Volume of outgoing data in bytes - `deployments.network_in`: Volume of inbound data traffic in bytes - `deployments.network_out`: Volume of outbound data traffic in bytes - `deployments.express_queue_size`: Average number of queued express requests - `deployments.batch_queue_size`: Average number of queued batch requests - `deployments.express_queue_time`: Average time in seconds for an express request to start processing - `deployments.batch_queue_time`: Average time in seconds for a batch request to start processing - `deployments.memory_utilization`: Average memory used during a request - `deployments.instances`: Number of active deployment instances - `deployments.credits`: Usage of credits, calculated by multiplying the credit rate of a deployment instance type by the number of hours the deployments are running  Available metrics for pipelines: - `pipelines.requests`: Number of requests to a pipeline version - `pipelines.failed_requests`: Number of failed requests to a pipeline version - `pipelines.request_duration`: Average time in seconds for a pipeline request to complete - `pipelines.input_volume`: Volume of incoming data in bytes - `pipelines.output_volume`: Volume of outgoing data in bytes - `pipelines.object_requests`: Number of object requests in a pipeline version - `pipelines.object_failed_requests`: Number of failed object requests in a pipeline version
}
\examples{
\dontrun{
# Use environment variables
Sys.setenv("UBIOPS_PROJECT" = "YOUR PROJECT NAME")
Sys.setenv("UBIOPS_API_TOKEN" = "YOUR API TOKEN")
result <- ubiops::time_series_data_list(
   
   metric = NULL, start.date = NULL, end.date = NULL, aggregation.period = NULL, labels = NULL
)

# Or provide directly
result <- ubiops::time_series_data_list(
   
   metric = NULL, start.date = NULL, end.date = NULL, aggregation.period = NULL, labels = NULL, 
   UBIOPS_PROJECT = "YOUR PROJECT NAME", UBIOPS_API_TOKEN = "YOUR API TOKEN"
)

print(result)

# The default API url is https://api.ubiops.com/v2.1
# Want to use a different API url?
# Provide `UBIOPS_API_URL`, either directly or as environment variable.
}
}
