% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipelines.R
\name{pipelines_create}
\alias{pipelines_create}
\title{Create pipelines}
\usage{
pipelines_create(data, preload_content = TRUE, ...)
}
\arguments{
\item{data}{named list of: [ name, description (optional), input_type, input_fields (optional), output_type (optional), output_fields (optional), labels (optional) ]}

\item{preload_content}{(optional) Whether the API response should be preloaded. When TRUE the JSON response string is parsed to an R object. When FALSE, unprocessed API response object is returned. - Default = TRUE}

\item{...}{UBIOPS_PROJECT (system environment variable) UbiOps project name
UBIOPS_API_TOKEN (system environment variable) Token to connect to UbiOps API
UBIOPS_API_URL (optional - system environment variable) UbiOps API url - Default = "https://api.ubiops.com/v2.1"
UBIOPS_TIMEOUT (optional - system environment variable) Maximum request timeout to connect to UbiOps API - Default = NA
UBIOPS_DEFAULT_HEADERS (optional - system environment variable) Default headers to pass to UbiOps API, formatted like "header1:value1,header2:value2" - Default = ""}
}
\value{
Response from the API
 Details of the created pipeline
  - `id`: Unique identifier for the pipeline (UUID)
  - `name`: Name of the pipeline
  - `description`: Description of the pipeline
  - `project`: Project name in which the pipeline is created
  - `input_type`: Type of the pipeline input
  - `input_fields`: A list of pipeline input fields with name and data_type
  - `output_type`: Type of the pipeline output
  - `output_fields`: A list of pipeline output fields with name and data_type
  - `labels`: Dictionary containing key/value pairs where key indicates the label and value is the corresponding value of that label
  - `creation_date`: The date when the pipeline was created
  - `last_updated`: The date when the pipeline was last updated
}
\description{
Create a pipeline in a project.   The input_fields represent the fields that the input data for pipeline requests should contain. When an object is attached to the pipeline, it means that the input data will be forwarded to these objects.
}
\examples{
\dontrun{
data <- list(
 name = "name",
 description = "description",  # (optional)
 input_type = "input_type",  # one of: [structured, plain] 
 input_fields = list(  # (optional)
   list(
     name = "name",
     data_type = "data_type"  # one of: [int, string, double, bool, array_int, array_double, array_string, blob] 
   )
 ),
 output_type = "output_type",  # one of: [structured, plain]  (optional)
 output_fields = list(  # (optional)
   list(
     name = "name",
     data_type = "data_type"  # one of: [int, string, double, bool, array_int, array_double, array_string, blob] 
   )
 ),
 labels = list(key = "value")  # (optional)
)

# Use environment variables
Sys.setenv("UBIOPS_PROJECT" = "YOUR PROJECT NAME")
Sys.setenv("UBIOPS_API_TOKEN" = "YOUR API TOKEN")
result <- ubiops::pipelines_create(
   data
)

# Or provide directly
result <- ubiops::pipelines_create(
   data,
   UBIOPS_PROJECT = "YOUR PROJECT NAME", UBIOPS_API_TOKEN = "YOUR API TOKEN"
)

print(result)

# The default API url is https://api.ubiops.com/v2.1
# Want to use a different API url?
# Provide `UBIOPS_API_URL`, either directly or as environment variable.
}
}
