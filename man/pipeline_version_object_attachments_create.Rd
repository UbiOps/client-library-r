% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipelines.R
\name{pipeline_version_object_attachments_create}
\alias{pipeline_version_object_attachments_create}
\title{Create object attachments}
\usage{
pipeline_version_object_attachments_create(
  pipeline.name,
  version,
  data,
  preload_content = TRUE,
  ...
)
}
\arguments{
\item{pipeline.name}{character}

\item{version}{character}

\item{data}{named list of: [ destination_name, sources ]}

\item{preload_content}{(optional) Whether the API response should be preloaded. When TRUE the JSON response string is parsed to an R object. When FALSE, unprocessed API response object is returned. - Default = TRUE}

\item{...}{UBIOPS_PROJECT (system environment variable) UbiOps project name
UBIOPS_API_TOKEN (system environment variable) Token to connect to UbiOps API
UBIOPS_API_URL (optional - system environment variable) UbiOps API url - Default = "https://api.ubiops.com/v2.1"
UBIOPS_TIMEOUT (optional - system environment variable) Maximum request timeout to connect to UbiOps API - Default = NA
UBIOPS_DEFAULT_HEADERS (optional - system environment variable) Default headers to pass to UbiOps API, formatted like "header1:value1,header2:value2" - Default = ""}
}
\value{
Response from the API
 Details of the created attachment
  - `destination_name`: Name of the destination pipeline object
  - `sources`: A list of dictionaries containing the link between a source object (source_name) and mapping of the source output field (source_field_name) and destination object input field (destination_field_name)
}
\description{
Create an attachment between objects in a pipeline version. An attachment can only be made between objects that have already been added to the pipeline version.  The objects where the attachment starts is called the source objects. The object that is linked is called the destination object. When attaching source objects to a destination object, one must also define which source object output fields map to which destination object input fields. All the input fields in the destination object must be provided in the mapping. In contrast, not all output fields of all source objects need to be used in the mapping. It is also possible that one source output field links to multiple destination input fields.  The *pipeline_start* object can only be a source object. The *pipeline_end* object can only be a destination object.  In case of plain type of objects, the mapping `source_field_name` and `destination_field_name` must be omitted or given as null.
}
\examples{
\dontrun{
data <- list(
 destination_name = "destination_name",
 sources = list(  # (optional)
   list(
     source_name = "source_name",
     mapping = list(  # (optional)
       list(
         source_field_name = "source_field_name",
         destination_field_name = "destination_field_name"
       )
     )
   )
 )
)

# Use environment variables
Sys.setenv("UBIOPS_PROJECT" = "YOUR PROJECT NAME")
Sys.setenv("UBIOPS_API_TOKEN" = "YOUR API TOKEN")
result <- ubiops::pipeline_version_object_attachments_create(
   pipeline.name, version, data
)

# Or provide directly
result <- ubiops::pipeline_version_object_attachments_create(
   pipeline.name, version, data,
   UBIOPS_PROJECT = "YOUR PROJECT NAME", UBIOPS_API_TOKEN = "YOUR API TOKEN"
)

print(result)

# The default API url is https://api.ubiops.com/v2.1
# Want to use a different API url?
# Provide `UBIOPS_API_URL`, either directly or as environment variable.
}
}
